"""create_tables

Revision ID: a4f6b1d9794c
Revises: bbc898ff9f3d
Create Date: 2025-10-18 20:17:44.368060

"""

from typing import Sequence, Union

import sqlalchemy as sa

from alembic import op

# revision identifiers, used by Alembic.
revision: str = "a4f6b1d9794c"
down_revision: Union[str, Sequence[str], None] = "bbc898ff9f3d"
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "genres",
        sa.Column("genre_id", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column("genre_name", sa.String(length=50), nullable=False),
        sa.PrimaryKeyConstraint("genre_id"),
        sa.UniqueConstraint("genre_name"),
    )
    op.create_table(
        "movies",
        sa.Column("movie_id", sa.Integer(), nullable=False),
        sa.Column("title", sa.Text(), nullable=False),
        sa.PrimaryKeyConstraint("movie_id"),
    )
    op.create_table(
        "movies_raw",
        sa.Column("movieId", sa.Integer(), nullable=False),
        sa.Column("title", sa.String(), nullable=False),
        sa.Column("genres", sa.String(), nullable=False),
        sa.PrimaryKeyConstraint("movieId"),
    )
    op.create_table(
        "ratings_raw",
        sa.Column("userId", sa.Integer(), nullable=False),
        sa.Column("movieId", sa.Integer(), nullable=False),
        sa.Column("rating", sa.Numeric(precision=2, scale=1), nullable=False),
        sa.Column("timestamp", sa.Integer(), nullable=False),
        sa.PrimaryKeyConstraint("userId", "movieId"),
    )
    op.create_table(
        "movie_genres",
        sa.Column("movie_id", sa.Integer(), nullable=False),
        sa.Column("genre_id", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(
            ["genre_id"],
            ["genres.genre_id"],
        ),
        sa.ForeignKeyConstraint(
            ["movie_id"],
            ["movies.movie_id"],
        ),
        sa.PrimaryKeyConstraint("movie_id", "genre_id"),
    )
    op.create_index(
        op.f("ix_movie_genres_genre_id"), "movie_genres", ["genre_id"], unique=False
    )
    op.create_table(
        "ratings",
        sa.Column("rating_id", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column("user_id", sa.Integer(), nullable=False),
        sa.Column("movie_id", sa.Integer(), nullable=False),
        sa.Column("rating", sa.Numeric(precision=2, scale=1), nullable=False),
        sa.Column("timestamp", sa.DateTime(), nullable=False),
        sa.CheckConstraint("rating >= 0.5 AND rating <= 5.0"),
        sa.ForeignKeyConstraint(
            ["movie_id"],
            ["movies.movie_id"],
        ),
        sa.ForeignKeyConstraint(
            ["user_id"],
            ["users.user_id"],
        ),
        sa.PrimaryKeyConstraint("rating_id"),
        sa.UniqueConstraint("user_id", "movie_id"),
    )
    op.create_index(op.f("ix_ratings_movie_id"), "ratings", ["movie_id"], unique=False)
    op.create_index(op.f("ix_ratings_user_id"), "ratings", ["user_id"], unique=False)
    op.add_column(
        "users", sa.Column("user_id", sa.Integer(), autoincrement=True, nullable=False)
    )
    op.drop_column("users", "name")
    op.drop_column("users", "id")
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column(
        "users", sa.Column("id", sa.INTEGER(), autoincrement=True, nullable=False)
    )
    op.add_column(
        "users", sa.Column("name", sa.VARCHAR(), autoincrement=False, nullable=False)
    )
    op.drop_column("users", "user_id")
    op.drop_index(op.f("ix_ratings_user_id"), table_name="ratings")
    op.drop_index(op.f("ix_ratings_movie_id"), table_name="ratings")
    op.drop_table("ratings")
    op.drop_index(op.f("ix_movie_genres_genre_id"), table_name="movie_genres")
    op.drop_table("movie_genres")
    op.drop_table("ratings_raw")
    op.drop_table("movies_raw")
    op.drop_table("movies")
    op.drop_table("genres")
    # ### end Alembic commands ###
